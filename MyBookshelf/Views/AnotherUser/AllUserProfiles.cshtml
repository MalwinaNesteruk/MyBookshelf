@model MyBookshelf.Models.UserSearchResponse

<link href="~/css/formatting.css" type="text/css" rel="stylesheet" />

<h1>Wyszukiwanie znajomych</h1>

<hr />

<style type="text/css">

    .btn:enabled {
        background-color: #0096FF;
        color: #FFFFFF;
        padding: 10px 30px;
        font-size: 16px;
        margin-top: 30px;
        border-radius: 5px;
    }

    .btn2:enabled {
        background-color: #0096FF;
        color: #FFFFFF;
        padding: 10px 30px;
        font-size: 16px;
        border-radius: 5px;
        border: none;
        outline: none;
    }

    .btn2:disabled {
        background-color: #808080;
        color: #FFFFFF;
        padding: 10px 30px;
        font-size: 16px;
        border-radius: 5px;
        border: none;
        outline: none;
    }

    .form-control {
        margin-bottom: 5px;
    }

    .form-group {
        display: flex;
        align-items: baseline;
        margin-bottom: 50px;
    }

    input {
        margin-right: 10px; /* Przerwa między input a button */
    }

    .form1-group {
        display: flex; /* Użycie flexbox */
        justify-content: flex-end; /* Wyrównanie elementów do prawej */
        margin-bottom: 25px;
    }

    .centered-pagination {
        display: flex;
        justify-content: center; /* Centrowanie poziome */
        align-items: center; /* Centrowanie pionowe */
        gap: 10px;
    }

    .centered-pagination span {
        text-align: center; /* Centrowanie wewnątrz span */
        font-size: 16px;
    }

    .user-grid {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 20px;
        padding: 20px;
    }

    .user-card {
        border-radius: 5px; /* Zaokrąglenie rogów */
        box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);
        width: 300px; 
        height: 300px;
        background: #f0f0f0;
        padding: 15px;
        text-align: center;
        font-size: 22px;
    }

    .user-card:hover {
        transform: scale(1.05);
    }

    .profile-img {
        width: 200px;
        height: 200px;
        border-radius: 5px;
        box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);
        margin-bottom: 10px;
    }

    #loadMore {
        display: block;
        margin: 20px auto;
        padding: 10px 20px;
        font-size: 16px;
        background-color: #0096FF;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background 0.3s;
    }

    #loadMore:hover {
        background-color: #007acc;
    }
</style>

<div>
    <div class="form-group">
        <input id="searchInput" class="form-control" name="query" placeholder="Wyszukiwany użytkownik" value="@ViewBag.Query" />
        <button id="searchButton" class="btn btn-default" type="button" name="btn">Wyszukaj</button>
    </div>

    <div id="errorMessage" style="color: black; display: none;"></div>

    <div id="userContainer" class="user-grid">
        @foreach (var user in Model.Users ?? new List<User>())
        {
            <div class="user-card" onclick="window.location='@Url.Action("ShowProfile", "AnotherUser", new { userName = user.UserName })';" style="cursor: pointer;">
                <img src="@Url.Content("~/imagesUser/" + user.ImageLink)" alt="Zdjęcie profilowe" class="profile-img" />
                <p>@user.UserName</p>
            </div>
        }
    </div>

    <button id="loadMore" style="display:@(Model.HasMore ? "block" : "none")">Załaduj więcej</button>
</div>

<script>
    let currentPage = 1;
    const pageSize = 8;

    function showErrorMessage(message) {
        const errorMessageEl = document.getElementById("errorMessage");
        errorMessageEl.textContent = message;
        errorMessageEl.style.display = "block";
    }

    function hideErrorMessage() {
        const errorMessageEl = document.getElementById("errorMessage");
        errorMessageEl.style.display = "none";
    }

    function loadUsers(reset = false) {
        const query = document.getElementById("searchInput")?.value?.trim() || "";

        fetch(`/AnotherUser/LoadMoreUsers?page=${currentPage}&pageSize=${pageSize}&query=${encodeURIComponent(query)}`)
            .then(response => response.json())
            .then(jsonData => {
                const userContainer = document.getElementById("userContainer");

                if (reset) {
                    userContainer.innerHTML = "";
                }

                if (jsonData.users.length === 0) {
                    showErrorMessage("Brak wyszukań");
                } else {
                    hideErrorMessage();
                }

                jsonData.users.forEach(user => {
                    const userCard = document.createElement("div");
                    userCard.classList.add("user-card");
                    userCard.style.cursor = "pointer";
                    userCard.innerHTML = `
                            <img src="/imagesUser/${user.imageLink}" alt="Zdjęcie profilowe" class="profile-img"/>
                            <p>${user.userName}</p>
                        `;
                    userCard.addEventListener("click", function () {
                        window.location.href = `/AnotherUser/ShowProfile/${user.userName}`;
                    });

                    userContainer.appendChild(userCard);
                });

                const loadMoreBtn = document.getElementById("loadMore");
                if (jsonData.hasMore) {
                    loadMoreBtn.style.display = "block";
                } else {
                    loadMoreBtn.style.display = "none";
                }
            })
            .catch(error => {
                console.error('Błąd przy ładowaniu użytkowników:', error);
                showErrorMessage("Wystąpił błąd podczas pobierania danych");
            });
    }

    document.getElementById("loadMore").addEventListener("click", function () {
        currentPage++;
        loadUsers();
    });

    document.getElementById("searchButton").addEventListener("click", function () {
        const query = document.getElementById("searchInput")?.value?.trim() || "";

        if (query.length === 0) {
            showErrorMessage("Aby wyszukać użytkownika, należy uzupełnić pole 'Wyszukiwany użytkownik'");
            return;
        }

        if (query.length < 3) {
            showErrorMessage("Wyszukiwana fraza musi mieć co najmniej 3 znaki");
            return;
        }

        hideErrorMessage();
        currentPage = 1;
        loadUsers(true);
    });

    // Obsługa Entera
    document.getElementById("searchInput").addEventListener("keyup", function (event) {
        if (event.key === "Enter") {
            document.getElementById("searchButton").click();
        }
    });

    // Inicjalizacja po załadowaniu strony – pokazanie wszystkich użytkowników
    window.onload = function () {
        loadUsers(true);
    };
</script>

